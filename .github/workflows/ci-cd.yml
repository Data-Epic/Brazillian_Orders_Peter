# name: Brazillian Orders CI/CD Pipeline to EC2 

# on:
#   push:
#     branches: [ "orders-deployment-2" ]
#   pull_request:
#     branches: [ "orders-deployment-2" ]

# jobs:
#   build_and_push_image:
#     name: Login, Build and Push Docker Image
#     runs-on: ubuntu-latest
#     environment: development
#     steps:
#     - name: Checkout the code
#       uses: actions/checkout@v4
#     - name: Login Dockerhub
#       uses: docker/login-action@v1
#       with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#     - name: Remove all unused images
#       run: docker image prune -a -f

#     # - name: remove existing image if it exists
#     #   run: docker image rm savepeter2/brazillian-orders-api-deployment:latest || true
#     - name: Build the Docker Image
#       run: docker compose build
#     # - name: Tag the image
#     #   run: docker tag brazillian-orders-api-deployment savepeter2/brazillian-orders-api-deployment:latest
#     - name: Push to Docker hub
#       run: docker push savepeter2/brazillian-orders-api-deployment:latest

#   deploy_to_ec2:
#     name: Pull image from Dockerhub and deploy to EC2
#     needs: build_and_push_image
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
#     - name: Deploy to EC2
#       env:
#         PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
#         HOST: ${{ secrets.EC2_HOST }}
#         USER: ${{ secrets.EC2_USER }}
#       run: |
#         echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
#             ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
#               sudo su - root << EOF
#     # sudo docker pull savepeter2/brazillian-orders-api-deployment:latest
#                 sudo docker compose down
#     #sudo docker rm -f api-deployment-container || true
#                 sudo docker compose pull
#                 sudo docker compose up -d
# #     sudo docker run -d -p 8080:8000 \
# #     -e PORT=8000 \
# #     --name api-deployment-container \
# #     --entrypoint "/Brazillian_Orders_Peter/entrypoint.sh" \
# #     savepeter2/brazillian-orders-api-deployment:latest
#         EOF
#             '
            
name: Brazilian Orders CI/CD Pipeline to EC2 

on:
  push:
    branches: [ "orders_api_deployment" ]
  pull_request:
    branches: [ "orders_api_deployment" ]

jobs:
  build_and_push_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: development
    env:
      API_PORT: ${{ secrets.API_PORT }}
      CONTAINER_PORT: ${{ secrets.CONTAINER_PORT }}
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build the Docker Image
      run: docker compose build

    - name: Push to Docker Hub
      run: docker compose push

    - name: Remove all unused images
      run: docker image prune -a -f

  deploy_to_ec2:
    name: Deploy to EC2
    needs: build_and_push_image
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
        API_PORT: ${{ secrets.API_PORT }}
        CONTAINER_PORT: ${{ secrets.CONTAINER_PORT }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
            ssh -o StrictHostKeyChecking=accept-new -i private_key ${USER}@${HOST} '
          sudo docker compose pull
          sudo docker compose down
          sudo docker compose up -d
        '








       


